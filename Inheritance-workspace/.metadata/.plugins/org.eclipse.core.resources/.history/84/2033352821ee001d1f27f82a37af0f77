package Inheritance;

import java.util.ArrayList;
import java.util.Scanner;

public class VehicleManagementSystem {
    private static ArrayList<Vehicle> vehicles = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("Welcome to the Vehicle Management System!");
            System.out.println("Please choose an option:");
            System.out.println("1. Add a vehicle");
            System.out.println("2. Search for vehicles by manufacturer");
            System.out.println("3. Display all vehicles");
            System.out.println("4. Exit");
            System.out.println("Enter your choice:");
            

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character left by nextInt()

            switch (choice) {
                case 1:
                    addVehicle();
                    break;
                case 2:
                    searchVehiclesByManufacturer();
                    break;
                case 3:
                    displayAllVehicles();
                    break;
                case 4:
                    System.out.println("Thank you for using the Vehicle Management System!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please choose a valid option.");
            }
        }
        
    }

    private static void addVehicle() {
        System.out.println("Please choose the type of vehicle to add:");
        System.out.println("1. Car");
        System.out.println("2. Bike");

        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character left by nextInt()

        System.out.println("Enter the engine type:");
        String engineType = scanner.nextLine();

        System.out.println("Enter the year of manufacture:");
        int yearOfManufacture = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character left by nextInt()

        System.out.println("Enter the manufacturer:");
        String manufacturer = scanner.nextLine();

        switch (choice) {
            case 1:
                System.out.println("Enter the transmission type:");
                String transmissionType = scanner.nextLine();

                System.out.println("Enter the car type:");
                String carType = scanner.nextLine();

                Car car = new Car(engineType, yearOfManufacture, manufacturer, transmissionType, carType);
                vehicles.add(car);
                System.out.println("Car added successfully.");
                break;
            case 2:
                System.out.println("Enter the number of strokes:");
                int numberOfStrokes = scanner.nextInt();
                scanner.nextLine(); // Consume the newline character left by nextInt()

                System.out.println("Enter the RPM:");
                int rpm = scanner.nextInt();
                scanner.nextLine(); // Consume the newline character left by nextInt()

                Bike bike = new Bike(engineType, yearOfManufacture, manufacturer, numberOfStrokes, rpm);
                vehicles.add(bike);
                System.out.println("Bike added successfully.");
                break;
            default:
                System.out.println("Invalid choice. Please choose a valid option.");
        }
    }

    private static void searchVehiclesByManufacturer() {
        System.out.println("Enter the manufacturer to search for:");
        String manufacturer = scanner.nextLine();

        boolean found = false;

        for (Vehicle vehicle : vehicles) {
            if (vehicle.getManufacturer().equalsIgnoreCase(manufacturer)) {
                System.out.println(vehicle);
                found = true;
            }
        }

        if (!found) {
            System.out.println("No vehicles found with the manufacturer '" + manufacturer + "'.");
        }
    }

    private static void displayAllVehicles() {
        if (vehicles.isEmpty()) {
            System.out.println("No vehicles found.");
        } else {
            for (Vehicle vehicle : vehicles) {
                System.out.println(vehicle);
            }
        }
    }
}

